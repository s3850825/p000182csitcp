# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MessageBoard.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QDir
from PyQt5.QtWidgets import QApplication, QInputDialog, QFileDialog
from scripts.crypto import *

class Ui_MessageBoard(object):
    def setupUi(self, MessageBoard):
        MessageBoard.setObjectName("MessageBoard")
        MessageBoard.resize(858, 838)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        MessageBoard.setFont(font)
        self.label = QtWidgets.QLabel(MessageBoard)
        self.label.setGeometry(QtCore.QRect(220, 10, 451, 71))
        font.setPointSize(30)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.SendMessageButton = QtWidgets.QPushButton(MessageBoard)
        self.SendMessageButton.setGeometry(QtCore.QRect(320, 760, 211, 51))
        font.setPointSize(16)
        self.SendMessageButton.setFont(font)
        self.SendMessageButton.setObjectName("SendMessageButton")
        self.scrollArea_2 = QtWidgets.QScrollArea(MessageBoard)
        self.scrollArea_2.setGeometry(QtCore.QRect(20, 80, 811, 261))
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 809, 259))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.listWidget = QtWidgets.QListWidget(self.scrollAreaWidgetContents_2)
        self.listWidget.setGeometry(QtCore.QRect(140, 20, 531, 221))
        font.setPointSize(20)
        self.listWidget.setFont(font)
        self.listWidget.setObjectName("listWidget")
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.Message = QtWidgets.QPlainTextEdit(MessageBoard)
        self.Message.setGeometry(QtCore.QRect(230, 640, 401, 101))
        font.setPointSize(16)
        self.Message.setFont(font)
        self.Message.setObjectName("Message")
        self.labelMessage = QtWidgets.QLabel(MessageBoard)
        self.labelMessage.setGeometry(QtCore.QRect(380, 580, 111, 51))
        self.labelMessage.setFont(font)
        self.labelMessage.setObjectName("labelMessage")
        self.decryptButton = QtWidgets.QPushButton(MessageBoard)
        self.decryptButton.setGeometry(QtCore.QRect(180, 480, 171, 51))
        self.decryptButton.setFont(font)
        self.decryptButton.setObjectName("decryptButton")
        self.validateButton = QtWidgets.QPushButton(MessageBoard)
        self.validateButton.setGeometry(QtCore.QRect(500, 480, 171, 51))
        self.validateButton.setFont(font)
        self.validateButton.setObjectName("validateButton")
        self.privateKeyLabel = QtWidgets.QLabel(MessageBoard)
        self.privateKeyLabel.setGeometry(QtCore.QRect(115, 390, 330, 61))
        self.privateKeyLabel.setFont(font)
        self.privateKeyLabel.setObjectName("privateKeyLabel")
        self.validationLabel = QtWidgets.QLabel(MessageBoard)
        self.validationLabel.setGeometry(QtCore.QRect(570, 390, 200, 61))
        self.validationLabel.setFont(font)
        self.validationLabel.setObjectName("validationLabel")
        
        self.listWidget.itemDoubleClicked.connect(self.showSelectedMessage)
        self.receivedMessages = []
        self.retranslateUi(MessageBoard)
        QtCore.QMetaObject.connectSlotsByName(MessageBoard)

    def retranslateUi(self, MessageBoard):
        _translate = QtCore.QCoreApplication.translate
        MessageBoard.setWindowTitle(_translate("MessageBoard", "Form"))
        self.label.setText(_translate("MessageBoard", "MESSAGE BOARD"))
        self.SendMessageButton.setText(_translate("MessageBoard", "Send message"))
        self.labelMessage.setText(_translate("MessageBoard", "Message"))
        self.decryptButton.setText(_translate("MessageBoard", "Decrypt"))
        self.validateButton.setText(_translate("MessageBoard", "Validate"))
        self.privateKeyLabel.setText(_translate("MessageBoard", "Your private key is required"))
        self.validationLabel.setText(_translate("MessageBoard", ""))

    def showReceivedMessages(self, database, user):
        self.listWidget.clear()
        self.Message.clear()
        self.privateKeyLabel.setHidden(True)
        self.decryptButton.setEnabled(False)
        self.validateButton.setEnabled(False)
        messages = database.getReceivedMessages(user.getStudentName())
        startNum = 1
        self.receivedMessages = messages

        for message in messages:
            messageType = message[2].lower()
            if message[2] != 'PLAIN':
                messageType += "ed"
            title = "[" + str(startNum) + "] A " + messageType + " message from " + message[0]
            self.listWidget.addItem(title)
            startNum += 1
    
    def showSelectedMessage(self, item):
        self.Message.clear()
        self.validationLabel.setText("")
        messageInfo = self.receivedMessages[int(item.text()[1]) - 1]
        if messageInfo[2] == 'PLAIN':
            self.decryptButton.setEnabled(False)
            self.privateKeyLabel.setHidden(True)
            self.validateButton.setEnabled(False)
            self.showPlainMessage(messageInfo[3])
        elif messageInfo[2] == 'ENCRYPT':
            self.privateKeyLabel.setHidden(False)
            self.decryptButton.setEnabled(True)
            self.validateButton.setEnabled(False)
        elif messageInfo[2] == 'SIGN':
            self.privateKeyLabel.setHidden(True)
            self.decryptButton.setEnabled(False)
            self.validateButton.setEnabled(True)
            self.showPlainMessage(messageInfo[4])

    def showPlainMessage(self, message):
        self.Message.clear()
        self.Message.insertPlainText(message)

    def showDecryptedMessage(self, decryptMessage):
        self.Message.clear()
        self.Message.insertPlainText(decryptMessage)
    
    def uploadPrivateKey(self, database):
        file_name = QFileDialog.getOpenFileName()
        path = file_name[0]
        messageInfo = self.receivedMessages[int(self.listWidget.currentItem().text()[1]) - 1]
        decryptMessage = decrypt_message(path, messageInfo[3])
        self.showDecryptedMessage(decryptMessage)
    
    def getSignedMessage(self):
        messageInfo = self.receivedMessages[int(self.listWidget.currentItem().text()[1]) - 1]
        return messageInfo[0], messageInfo[3], messageInfo[4]

    def showVerificationResult(self, result):
        if result:
            self.validationLabel.setText("True")
        else:
            self.Message.insertPlainText("False")
